# Generated by Django 3.2.12 on 2023-10-29 14:08

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('booking_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('fromdate', models.CharField(blank=True, db_column='FromDate', max_length=100, null=True)),
                ('todate', models.CharField(blank=True, db_column='ToDate', max_length=100, null=True)),
                ('regdate', models.CharField(blank=True, db_column='RegDate', max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('cancelledby', models.CharField(blank=True, db_column='CancelledBy', max_length=5, null=True)),
            ],
            options={
                'db_table': 'booking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('cat_id', models.IntegerField(db_column='Cat_id', primary_key=True, serialize=False)),
                ('cat_name', models.CharField(db_column='Cat_name', max_length=2000)),
            ],
            options={
                'db_table': 'category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contactus',
            fields=[
                ('contact_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('phno', models.BigIntegerField(db_column='PhNo', unique=True)),
                ('email_id', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'contactus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Issues',
            fields=[
                ('query_id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email_id', models.CharField(blank=True, max_length=200, null=True)),
                ('query', models.CharField(blank=True, max_length=1000, null=True)),
                ('reply_given', models.CharField(blank=True, max_length=2000, null=True)),
                ('show_faq', models.IntegerField(blank=True, db_column='show_FAQ', null=True)),
            ],
            options={
                'db_table': 'issues',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('pack_id', models.IntegerField(primary_key=True, serialize=False)),
                ('pack_name', models.CharField(max_length=1000)),
                ('pack_price', models.IntegerField()),
                ('pic1', models.CharField(max_length=600)),
                ('pic2', models.CharField(max_length=600)),
                ('detail', models.CharField(max_length=600)),
            ],
            options={
                'db_table': 'package',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(max_length=50)),
                ('amount', models.IntegerField()),
                ('mode', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('subcat_id', models.CharField(db_column='Subcat_id', max_length=200, primary_key=True, serialize=False)),
                ('location', models.CharField(db_column='Location', max_length=1000)),
                ('details', models.CharField(db_column='Details', max_length=2000)),
            ],
            options={
                'db_table': 'subcategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=2000)),
                ('mob_num', models.BigIntegerField(unique=True)),
                ('email_id', models.CharField(max_length=50, unique=True)),
                ('pswd', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
    ]
